{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","find","n","changedNote","_objectSpread","returnedNote","map","catch","error","setTimeout","filter","notesToShow","components_Notification","components_Note","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","console","log","target","type","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6bcd7744.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note,toggleImportance }) => {\r\n\r\n\tconst label = note.important\r\n\t? 'make not important' : 'make important'\r\n\r\n\treturn <li className=\"note\">\r\n\t\t\t\t{note.content}\r\n\t\t\t\t<button onClick={toggleImportance}>{label}</button>\r\n\t\t\t</li>;\r\n};\r\n\r\nexport default Note;\r\n","import axios from 'axios'\r\nconst baseUrl = '/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({message}) =>{\r\n\r\n    if(message == null){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () =>{\r\n\r\n    const footerStyle = {\r\n        color      :'green',\r\n        fontStyle  :'italic',\r\n        fontSize   :16\r\n    }\r\n\r\n    return(\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {useState, useEffect} from \"react\";\r\nimport axios from 'axios'\r\nimport Note from \"./components/Note\";\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\n\r\nconst App = (props) => {\r\n  const [notes,setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll,setShowAll] = useState(true)\r\n  const [errorMessage,setErrorMessage] = useState()\r\n\r\n  useEffect(()=>{\r\n   noteService\r\n    .getAll()\r\n    .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n    })\r\n  }, [])\r\n\r\n  const toggleImportance = id =>{\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id,changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error =>{\r\n\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already deleted in the server`\r\n        )\r\n\r\n        setTimeout(()=>{\r\n          setErrorMessage(null)\r\n        },5000)\r\n\r\n        setNotes(notes.filter(n=>n.id !== id))\r\n      })\r\n\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important === true)\r\n\r\n  const rows = () => notesToShow.map(note => \r\n    <Note \r\n      key={note.id} \r\n      note={note} \r\n      toggleImportance={()=>toggleImportance(note.id)}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>\r\n      <ul>{rows()}</ul>\r\n      <form onSubmit={addNote}>\r\n      \t<input \r\n          value={newNote} \r\n          onChange={handleNoteChange}\r\n        />\r\n      \t<button type=\"submit\" >save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\"; // highlight-line\r\nimport './index.css'\r\n\r\nimport axios from 'axios'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}